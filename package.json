{
  "name": "superpowers",
  "displayName": "superpowers",
  "description": "Edit your document with JavaScript functions",
  "version": "0.1.1",
  "publisher": "thykka",
  "engines": {
    "vscode": "^1.30.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:superpowers.customMap",
    "onCommand:superpowers.customSort",
    "onCommand:superpowers.customReduce",
    "onCommand:superpowers.mapPresets",
    "onCommand:superpowers.sortPresets",
    "onLanguage:markdown",
    "onLanguage:plaintext"
  ],
  "main": "./extension.js",
  "contributes": {
    "configuration": {
      "title": "Superpowers",
      "properties": {
        "superpowers.mapPresets": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "Custom map presets",
            "description": "Custom map presets",
            "properties": {
              "name": {
                "type": "string",
                "description": "Map preset name"
              },
              "function": {
                "type": "string",
                "description": "Map preset function"
              }
            }
          },
          "default": [
            {
              "name": "Convert camelCase",
              "function": "(v) => v.trim().replace(/(?:^|\\s|_|-+)(\\w)/g, (_, c, o) => o !== 0 ? c.toUpperCase() : c)"
            },
            {
              "name": "Generate Current time, rounded to closest quarter hour",
              "function": "() => { let now = new Date( Math.round(Date.now() / 1000 / 60 / 15) * 1000 * 60 * 15 ); return now.getHours() + ':' + ('0' + now.getMinutes()).substr(-2) }"
            },
            {
              "name": "Calculate Time delta (input format: HH:MM - HH:MM)",
              "function": "(v) => { var times = v.match(/[0-9]+:[0-9]+/g).map(t => { let parts = t.split(':'); return parseInt(parts[0]) + (parts[1] / 60) }); return v + ' (' + Math.abs(times[1] - times[0]) + 'h)'; }"
            },
            {
              "name": "Generate Three-letter animal names",
              "function": "(_, i) => { let wds = 'ant,ape,ass,bat,bee,bug,cat,dog,eel,elk,emu,fox,gnu,hen,hog,owl,pig,ram,rat,sow,yak'.split(/,/); return wds[i % wds.length]; }"
            },
            {
              "name": "Prefix Selection index",
              "function": "(v, i) => `${i+1}. ${v}`"
            }
          ]
        },
        "superpowers.sortPresets": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "Custom sort presets",
            "description": "Custom sort presets",
            "properties": {
              "name": {
                "type": "string",
                "description": "Sort preset name"
              },
              "function": {
                "type": "string",
                "description": "Sort preset function"
              }
            }
          },
          "default": [
            {
              "name": "Randomize (uneven distribution)",
              "function": "(a, b) => (0.5 - Math.random()) * a.length"
            },
            {
              "name": "Natural Ascending (alphanumeric)",
              "function": "(s1, s2) => { const a = s1.split(/(\\d+|\\D+)/).filter(function(s){return s!=''}); const b = s2.split(/(\\d+|\\D+)/).filter(function(s){return s!=''}); let cmp = 0; for (let i = 0; 0 == cmp && i < a.length && i < b.length; i++) { let n1 = a[i] - 0, n2 = b[i] - 0; if (!isNaN(n1) && !isNaN(n2)) cmp = n1 - n2; else if (a[i] < b[i]) cmp = -1; else if (a[i] > b[i]) cmp = 1; } return cmp; }"
            },
            {
              "name": "Natural Descending (alphanumeric)",
              "function": "(s1, s2) => { const a = s1.split(/(\\d+|\\D+)/).filter(function(s){return s!=''}); const b = s2.split(/(\\d+|\\D+)/).filter(function(s){return s!=''}); let cmp = 0; for (let i = 0; 0 == cmp && i < a.length && i < b.length; i++) { let n1 = a[i] - 0, n2 = b[i] - 0; if (!isNaN(n1) && !isNaN(n2)) cmp = n1 - n2; else if (a[i] < b[i]) cmp = -1; else if (a[i] > b[i]) cmp = 1; } return -cmp; }"
            }
          ]
        },
        "superpowers.reducePresets": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "Custom reduce presets",
            "description": "Custom reduce presets",
            "properties": {
              "name": {
                "type": "string",
                "description": "Reduce preset name"
              },
              "function": {
                "type": "string",
                "description": "Reduce preset function"
              }
            }
          },
          "default": [
            {
              "name": "Sum numbers",
              "function": "(sum, val) => parseFloat(sum) + parseFloat(val)"
            },
            {
              "name": "Count occurrences",
              "function": "(list,val) => { if(typeof list !== 'object') { list = { [list]: 1 }; } if(!list[val]) { list[val] = 0 } list[val]++; return list; }"
            }
          ]
        }
      }
    },
    "commands": [
      {
        "command": "superpowers.customMap",
        "title": "Superpowers - Custom Map function"
      },
      {
        "command": "superpowers.mapPresets",
        "title": "Superpowers - Map presets"
      },
      {
        "command": "superpowers.customSort",
        "title": "Superpowers - Custom Sort function"
      },
      {
        "command": "superpowers.sortPresets",
        "title": "Superpowers - Sort presets"
      },
      {
        "command": "superpowers.customReduce",
        "title": "Superpowers - Custom Reduce function"
      },
      {
        "command": "superpowers.reducePresets",
        "title": "Superpowers - Reduce presets"
      }
    ]
  },
  "scripts": {
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "node ./node_modules/vscode/bin/test"
  },
  "devDependencies": {
    "typescript": "^3.1.4",
    "vscode": "^1.1.25",
    "eslint": "^4.11.0",
    "@types/node": "^8.10.25",
    "@types/mocha": "^2.2.42"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/thykka/vscode-superpowers.git"
  }
}
